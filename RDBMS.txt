1. Show first name, last name, and gender of patients whose gender is 'M'.
 
 SELECT first_name,last_name,gender
 FROM patients
 where gender='M';

2. Show first name and last name of patients who does not have allergies. (null)

SELECT first_name,last_name
FROM patients
where allergies IS NULL;

3. Show first name of patients that start with the letter 'C'.
 SELECT first_name
 FROM patients
 where first_name like 'C%' ;

4. Show first name and last name of patients that weight within the range of 100 to 120 (inclusive).
 SELECT first_name, last_name
 FROM patients
 where weight between 100 and 120 ;

 SELECT first_name,last_name
 FROM patients
 WHERE weight >= 100 AND weight <= 120;

5. Update the patients table for the allergies column. If the patient's allergies is null then replace it with 'NKA'.
 UPDATE patients
 set allergies='NKA'
 where allergies IS NULL;

6. Show first name and last name concatinated into one column to show their full name.
 SELECT
 CONCAT(first_name, ' ', last_name) AS full_name
 FROM patients;

 SELECT first_name || ' ' || last_name
 FROM patients;

7. Show first name, last name, and the full province name of each patient.
Example: 'Ontario' instead of 'ON

select p.first_name, p.last_name, pro.province_name
from patients AS p,province_names AS pro
where p.province_id=pro.province_id;

8. Show how many patients have a birth_date with 2010 as the birth year.
 Select COUNT (*)
 from patients 
 where birth_date like '2010-__-__';

 SELECT COUNT(*) AS total_patients
 FROM patients
 WHERE YEAR(birth_date) = 2010;

9. Show the first_name, last_name, and height of the patient with the greatest height.
 select first_name,last_name,max(height)
 from patients ;

 SELECT first_name, last_name,
 MAX(height) AS height
 FROM patients;

10. Show all columns for patients who have one of the following patient_ids:1,45,534,879,1000
 select *
 from patients 
 where patient_id IN (1,45,534,879,1000);

11. Show the total number of admissions.
  Select count(attending_doctor_id)
  from admissions;

12. Show all the columns from admissions where the patient was admitted and discharged on the same day.
 Select *
 from admissions
 where admission_date==discharge_date;

13. Show the patient id and the total number of admissions for patient_id 579.
 SELECT patient_id,
 COUNT(*) AS total_admissions
 FROM admissions
 WHERE patient_id = 579;

14. Based on the cities that our patients live in, show unique cities that are in province_id 'NS'?
 select distinct(city) as unique_cities
 from patients
 where province_id='NS';

15. Write a query to find the first_name, last name and birth date of patients who has height greater than 160 and weight greater than 70.
 select first_name,last_name,birth_date
 from patients
 where height>160 and weight>70;

16. Write a query to find list of patients first_name, last_name, and allergies where allergies are not null and are from the city of 'Hamilton'.
 select first_name,last_name,allergies
 from patients
 where allergies not Null and city='Hamilton';

17. Show unique birth years from patients and order them by ascending.
 SELECT DISTINCT year(birth_date)
 FROM patients
 ORDER BY birth_date ASC;

18. Show unique first names from the patients table which only occurs once in the list.

For example, if two or more people are named 'John' in the first_name column then don't include their name in the output list. If only 1 person is named 'Leo' then include them in the output.

SELECT first_name
FROM patients
group by first_name
having count(*)=1;

19. Show patient_id and first_name from patients where their first_name start and ends with 's' and is at least 6 characters long.
SELECT patient_id, first_name
FROM patients
WHERE first_name LIKE 's____%s';

SELECT patient_id,first_name
FROM patients
WHERE first_name LIKE 's%s' AND len(first_name) >= 6;

SELECT patient_id,first_name
FROM patients
where first_name like 's%'
  and first_name like '%s'
  and len(first_name) >= 6;

20. Show patient_id, first_name, last_name from patients whos diagnosis is 'Dementia'.
Primary diagnosis is stored in the admissions table.

SELECT p.patient_id, p.first_name,p.last_name
FROM patients as p,admissions as a
WHERE p.patient_id=a.patient_id and diagnosis='Dementia';

SELECT patient_id,first_name,last_name
FROM patients
WHERE patient_id IN (SELECT patient_id 
                     FROM admissions 
                     WHERE diagnosis = 'Dementia');

21.Display every patient's first_name. Order the list by the length of each name and then by alphabetically.
 SELECT first_name
 FROM patients 
 order by length(first_name), first_name ASC;

22. Show the total amount of male patients and the total amount of female patients in the patients table.
Display the two results in the same row.

Select sum(gender='M') as male_count, sum(gender='F') as female_count
from patients;

SELECT 
  (SELECT count(*) FROM patients WHERE gender='M') AS male_count, 
  (SELECT count(*) FROM patients WHERE gender='F') AS female_count;

23. Show first and last name, allergies from patients which have allergies to either 'Penicillin' or 'Morphine'. Show results ordered ascending by allergies then by first_name then by last_name.

select first_name,last_name,allergies
from patients
where allergies in ('Penicillin', 'Morphine')
order by allergies asc, first_name asc,last_name asc;

SELECT first_name,last_name,allergies
FROM patients
WHERE allergies IN ('Penicillin', 'Morphine')
ORDER BY 
  allergies,
  first_name,
  last_name;

24. Show patient_id, diagnosis from admissions. Find patients admitted multiple times for the same diagnosis.
 SELECT patient_id, diagnosis
FROM admissions
GROUP BY patient_id, diagnosis
HAVING COUNT(*) > 1;

25. Show the city and the total number of patients in the city.
Order from most to least patients and then by city name ascending.
SELECT city, COUNT(*) AS total_patients
FROM patients
GROUP BY city
ORDER BY total_patients DESC, city ASC;

26. Show first name, last name and role of every person that is either patient or doctor.
The roles are either "Patient" or "Doctor"
SELECT first_name, last_name, 'Patient' as role FROM patients
    union all
select first_name, last_name, 'Doctor' from doctors;

27. Show all allergies ordered by popularity. Remove NULL values from query.
 SELECT allergies, 
 count(*)
 FROM patients
 WHERE allergies NOT NULL
 GROUP BY allergies
 ORDER BY count(*) DESC

28. Show all patient's first_name, last_name, and birth_date who were born in the 1970s decade. Sort the list starting from the earliest birth_date.
 SELECT first_name,last_name, birth_date
 from patients
 where birth_date like '197_-__-__'
 ORDER BY birth_date asc;

29. We want to display each patient's full name in a single column. Their last_name in all upper letters must appear first, then first_name in all lower case letters. Separate the last_name and first_name with a comma. Order the list by the first_name in decending order
EX: SMITH,jane

SELECT concat (upper(last_name),',',lower(first_name))  as new_name_format
from patients
order by first_name desc;

30. Show the province_id(s), sum of height; where the total sum of its patient's height is greater than or equal to 7,000.
SELECT province_id, SUM(height) AS total_height
FROM patients
GROUP BY province_id
HAVING SUM(height) >= 7000;

31. Show the difference between the largest weight and smallest weight for patients with the last name 'Maroni'
SELECT MAX(weight) - MIN(weight) AS weight_delta
FROM patients
WHERE last_name = 'Maroni';

32. Show all of the days of the month (1-31) and how many admission_dates occurred on that day. Sort by the day with most admissions to least admissions.
SELECT DAY(admission_date) AS day_number, COUNT(*) AS number_of_admissions
FROM admissions
GROUP BY DAY(admission_date)
ORDER BY number_of_admissions desc;

33. Show all columns for patient_id 542's most recent admission_date.
SELECT *
FROM admissions
WHERE patient_id = 542
ORDER BY admission_date DESC
LIMIT 1

34. Show patient_id, attending_doctor_id, and diagnosis for admissions that match one of the two criteria:
1. patient_id is an odd number and attending_doctor_id is either 1, 5, or 19.
2. attending_doctor_id contains a 2 and the length of patient_id is 3 characters.

SELECT patient_id, attending_doctor_id, diagnosis
FROM admissions
WHERE 
    (patient_id % 2!= 0 AND attending_doctor_id IN (1, 5, 19))
    OR 
    (attending_doctor_id LIKE '%2%' AND LENGTH(patient_id) = 3);

35. Show first_name, last_name, and the total number of admissions attended for each doctor.
Every admission has been attended by a doctor.

SELECT d.first_name, d.last_name, COUNT(*) AS total_admissions_attended
FROM doctors d
JOIN admissions a ON d.doctor_id = a.attending_doctor_id
GROUP BY d.first_name, d.last_name;

36. For each doctor, display their id, full name, and the first and last admission date they attended.
SELECT 
    d.doctor_id,
    CONCAT(d.first_name, ' ', d.last_name) AS full_name,
    MIN(a1.admission_date) AS first_admission_date,
    MAX(a1.admission_date) AS last_admission_date
FROM 
    doctors d
JOIN 
    admissions a1 ON d.doctor_id = a1.attending_doctor_id
GROUP BY 
    d.doctor_id, full_name;

37. Display the total amount of patients for each province. Order by descending.
SELECT province_name, COUNT(*) as patient_count
FROM patients pa
JOIN province_names pr on pr.province_id = pa.province_id
group by pr.province_id
order by patient_count desc;

38. For every admission, display the patient's full name, their admission diagnosis, and their doctor's full name who diagnosed their problem.
SELECT 
    CONCAT(p.first_name, ' ', p.last_name) AS patient_full_name,
    a.diagnosis AS admission_diagnosis,
    CONCAT(d.first_name, ' ', d.last_name) AS doctor_full_name
FROM 
    admissions a
JOIN 
    patients p ON a.patient_id = p.patient_id
JOIN 
    doctors d ON a.attending_doctor_id = d.doctor_id;

39. display the first name, last name and number of duplicate patients based on their first name and last name.
Ex: A patient with an identical name can be considered a duplicate.

SELECT 
    first_name,
    last_name,
    COUNT(*)  AS num_of_duplicates
FROM 
    patients
GROUP BY 
    first_name, last_name
HAVING 
    COUNT(*) > 1;

40. Display patient's full name,
height in the units feet rounded to 1 decimal,
weight in the unit pounds rounded to 0 decimals,
birth_date,
gender non abbreviated.

Convert CM to feet by dividing by 30.48.
Convert KG to pounds by multiplying by 2.205.

SELECT 
    CONCAT(first_name, ' ', last_name) AS full_name,
    ROUND(height / 30.48, 1) AS height_feet,
    ROUND(weight * 2.205, 0) AS weight_pounds,
    birth_date,
    CASE 
        WHEN gender = 'M' THEN 'Male'
        WHEN gender = 'F' THEN 'Female'
        ELSE 'Other'
    END AS gender
FROM 
    patients;
41. Show patient_id, first_name, last_name from patients whose does not have any records in the admissions table. (Their patient_id does not exist in any admissions.patient_id rows.)
 SELECT p.patient_id, p.first_name, p.last_name
 FROM patients p
 LEFT JOIN admissions a ON p.patient_id = a.patient_id
 WHERE a.patient_id IS NULL;
